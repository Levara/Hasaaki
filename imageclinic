#!/bin/bash

#Abs path thanks to: 
# https://stackoverflow.com/a/13087801
function abs_path {
    if [[ -d "$1" ]]
    then
        pushd "$1" >/dev/null
        pwd
        popd >/dev/null
    elif [[ -e $1 ]]
    then
        pushd "$(dirname "$1")" >/dev/null
        echo "$(pwd)/$(basename "$1")"
        popd >/dev/null
    else
        echo "$1" does not exist! >&2
        return 127
    fi
}

# Argument parsing thanks to:
# https://stackoverflow.com/a/14203146

# Use -gt 1 to consume two arguments per pass in the loop (e.g. each
# argument has a corresponding value to go with it).
# Use -gt 0 to consume one or more arguments per pass in the loop (e.g.
# some arguments don't have a corresponding value to go with it such
# as in the --default example).
# note: if this is set to -gt 0 the /etc/hosts part is not recognized ( may be a bug )
if [[ $# -lt 1 ]]; then
  echo "Imageclinic expects at least 1 argument"
  echo "Run imageclinic -h for help"
  exit
fi

while [[ $# -gt 0 ]]
do
key="$1"


#TODO: HELP
case $key in
    init)
    INIT=YES
    ;;
    install)
    INSTALL=YES
    ;;
    reinstall)
    REINSTALL=YES
    ;;
    dev)
    DEVELOPMENT_MODE=YES
    ;;
    run)
    if [[ "$2" = "" ]]; then
      echo "run option expects a path to directory with images"
      exit
    fi
    IMAGES_PATH=`abs_path "$2"`
    shift # past argument
    ;;
    *)
    echo "Option not recognized"
    exit
    ;;
esac
shift # past argument or value
done

##########################
################ INSTALL
if  [[ $INSTALL = "YES" ]] || [[ $REINSTALL = "YES" ]] ; 
then
  INSTALL_PATH="/usr/local/bin"
  echo "Where do you want to install imageclinic?" 
  echo "[Leave empty for /usr/local/bin]: "
  read USER_INSTALL_PATH
  if [[ $USER_INSTALL_PATH -ne "" ]]; then
    INSTALL_PATH="$USER_INSTALL_PATH"
  fi

  if [[ $INSTALL = "YES" ]]; then
    docker build --rm -t levara:imageclinic .
  elif [[ $REINSTALL = "YES" ]]; then
    docker build --no-cache --rm -t levara:imageclinic .
  fi

  if [ $? -eq 0 ]; then
      echo "Docker image sucessfuly configured"
  else
      echo "Problem with Docker image setup, check if Docker installed"
      exit
  fi

  SUDO=''
  if (( $EUID != 0 )); then
      SUDO='sudo'
  fi
  CURRENT_DIRECTORY=`pwd`
  $SUDO ln -fs "$CURRENT_DIRECTORY/imageclinic" "$INSTALL_PATH"
  if [ $? -eq 0 ]; then
      echo "Imageclinic sucessfully installed to $INSTALL_PATH"
  else
      echo "Installation failed!"
      exit
  fi
  exit
fi

if  [[ $INIT = "YES" ]] ; 
then
  echo Initializing!
  exit
fi

if [[ $DEVELOPMENT_MODE = "YES" ]]; 
then
  if [ -f .imageclinic-gui  ]; then
    IMAGECLINIC_PATH=`pwd`
    docker run -i \
      -v $IMAGECLINIC_PATH:/root/src/ \
      -v $IMAGECLINIC_PATH/test_images/:/root/src/public/imageclinic \
      -p 3000:3000 -t levara:imageclinic \
      /bin/bash -l -c "source /usr/local/rvm/bin/rvm > /dev/null; \
                       cd ~/src; \
                       bundle install > /dev/null; \
                       bundle exec rake db:setup; \
                       rails server -b 0.0.0.0 -p 3000"

  else
    echo "Dev mode must be run from imageclinic-gui project directory"
    exit
  fi
fi



    #docker run -i -p 3000:3000 -t mycentos \
      #/bin/bash -c "source /usr/local/rvm/bin/rvm; \
                    #cd ~/app; rails server"




